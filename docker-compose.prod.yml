services:
  nginx:
    image: nginx:alpine
    container_name: merel_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./app:/var/www
      - ./docker/nginx/default.prod.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - php
    networks:
      - merel_network
    restart: always

  php:
    build:
      context: ./docker/php
      args:
        TIMEZONE: Europe/Paris
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    container_name: merel_php
    working_dir: /var/www
    volumes:
      - ./app:/var/www
    environment:
      - APP_ENV=prod
      - DATABASE_URL=mysql://merel_user:merel_password@mysql:3306/merel_db
      - MAILER_DSN=smtp://mailhog:1025
    depends_on:
      - mysql
      # ✅ RETIRÉ la dépendance mailhog qui causait le blocage
    networks:
      - merel_network
    restart: always

  mysql:
    image: mysql:8.0
    container_name: merel_mysql
    volumes:
      - ./data/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: secureRootPass123
      MYSQL_DATABASE: merel_db
      MYSQL_USER: merel_user
      MYSQL_PASSWORD: merel_password
    networks:
      - merel_network
    restart: always

  # ✅ MailHog en service indépendant (démarrage optionnel)
  mailhog:
    image: mailhog/mailhog
    container_name: merel_mailhog_prod
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - merel_network
    restart: always
    # ✅ AJOUT : démarrage toujours, même si autres services ont des problèmes
    depends_on: []

  # Service pour le frontend (construction seulement)
  node:
    image: node:18
    container_name: merel_node
    working_dir: /app
    volumes:
      - ./frontend:/app
      - ./app/public/build:/build_output
    command: /bin/sh -c "npm install && npm run build:prod && cp -rv dist/* /build_output/ && echo 'Build frontend terminé avec succès!'"
    networks:
      - merel_network
    environment:
      - VITE_API_URL=http://193.108.53.178/api

networks:
  merel_network:
    driver: bridge