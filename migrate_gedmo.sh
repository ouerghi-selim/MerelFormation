#!/bin/bash

# Script de migration vers Gedmo SoftDelete
# Usage: ./migrate_gedmo.sh

echo "üöÄ Migration vers Gedmo SoftDelete"

# Liste des entit√©s √† migrer (ordre d'importance)
ENTITIES=(
    "Vehicle"
    "Formation" 
    "Company"
    "Invoice"
    "VehicleRental"
    "Session"
    "Reservation"
    "User"
)

# Fonction pour ajouter Gedmo √† une entit√©
migrate_entity() {
    local entity=$1
    local file="/home/seoue/web/perso/MerelFormation/app/src/Entity/${entity}.php"
    
    echo "üìÑ Migration de l'entit√©: $entity"
    
    if [ ! -f "$file" ]; then
        echo "‚ùå Fichier non trouv√©: $file"
        return 1
    fi
    
    # Backup
    cp "$file" "${file}.backup"
    
    # Ajouter les imports Gedmo si pas d√©j√† pr√©sents
    if ! grep -q "use Gedmo" "$file"; then
        sed -i '/use Doctrine\\ORM\\Mapping as ORM;/a use Gedmo\\Mapping\\Annotation as Gedmo;\nuse Gedmo\\SoftDeleteable\\Traits\\SoftDeleteableEntity;' "$file"
    fi
    
    # Ajouter l'annotation SoftDeleteable si pas d√©j√† pr√©sente
    if ! grep -q "SoftDeleteable" "$file"; then
        sed -i '/^class /i #[Gedmo\\SoftDeleteable(fieldName: '\''deletedAt'\'', timeAware: false, hardDelete: true)]' "$file"
    fi
    
    # Ajouter le trait si pas d√©j√† pr√©sent
    if ! grep -q "use SoftDeleteableEntity" "$file"; then
        sed -i '/^class.*{/a \    use SoftDeleteableEntity; // ‚úÖ Trait Gedmo SoftDelete' "$file"
    fi
    
    echo "‚úÖ $entity migr√©"
}

# Migrer chaque entit√©
for entity in "${ENTITIES[@]}"; do
    migrate_entity "$entity"
done

echo ""
echo "üîÑ G√©n√©ration de la migration..."
docker exec merel_php php bin/console doctrine:migrations:diff

echo ""
echo "‚úÖ Migration Gedmo termin√©e !"
echo "üìù Prochaines √©tapes:"
echo "   1. V√©rifier les fichiers modifi√©s"
echo "   2. Ex√©cuter: docker exec merel_php php bin/console doctrine:migrations:migrate"
echo "   3. Tester le fonctionnement"